<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rjButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEASABIAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABHAEcDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKACgAoAKACgAoAKAPDf2ifjDF8EfhdrnjSK
        G0vdcBt9N8NaZeS7Ir3WL+eOCJ5Y1eOee106J5dSvIoGSSWC1aBZYGmWZOnC0PrFaNO7UdXNrpFK/pd7
        K/e+pyY3ErCYedWyc9I04vZyeiv1aj8Tta6Vrq9z8ZNI/bQ/aJ0zxOPEs/j241dXuDLdeH9TsdPfw5cw
        MctZrpltbWy2MW3CpNp0lpdpgN9pLFy/vyy/CuHIqSjppJN86fe7bv8AO68j5iOZ42NT2ntnLW7hJLka
        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
</value>
  </data>
</root>